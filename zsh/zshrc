# -- Dotfiles Directory --------------------------------------------------------
export XDG_CONFIG_HOME="$HOME/.config"
export DOTFILES="$HOME/.dotfiles"

# Helper scripts
source "$DOTFILES/scripts/helpers/functions.sh"

# -- Zsh -----------------------------------------------------------------------
DEFAULT_USER='alex'

ZSH="$HOME/.oh-my-zsh"
ZSH_CUSTOM="$DOTFILES/zsh/custom"
fpath=( "$DOTFILES/zsh/custom" $fpath)

# -- NVM -----------------------------------------------------------------------
export NVM_DIR=$HOME/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# -- Theme ---------------------------------------------------------------------
ZSH_THEME="pure"

# -- ZSH Plugins ---------------------------------------------------------------
plugins=(git brew tmux rbenv npm bower vi-mode)
if exists "virtualenvwrapper"; then plugins+=virtualenvwrapper; fi

fpath=($DOTFILES/zsh/custom/completion $fpath)

# -- Oh My Zsh -----------------------------------------------------------------
source $ZSH/oh-my-zsh.sh

# -- Named Directories ---------------------------------------------------------
unsetopt auto_name_dirs

# -- Completion Config ---------------------------------------------------------
zstyle ':completion:*:*:vim:*:*files' ignored-patterns '*.class'

# -- Command History -----------------------------------------------------------
export HISTSIZE=500
export SAVEHIST=500

# -- Options -------------------------------------------------------------------
unsetopt correct_all
unsetopt correct

# -- Variables -----------------------------------------------------------------
export EDITOR=/usr/local/bin/nvim
alias vim=nvim
alias vi=nvim
alias dm=docker-machine

# -- Aliases -------------------------------------------------------------------
if [[ -f "$DOTFILES/aliases" ]]; then
  source $DOTFILES/aliases
fi

if [[ -f "$HOME/.aliases" ]]; then
    source $HOME/.aliases
fi

if exists "hub"; then alias git=hub; fi

codeclimate() {
  docker run --interactive --tty --rm --env CODE_PATH="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate "$@"
}

export PATH="$PATH:/opt/vagrant/bin"
export PATH="/usr/local/sbin:$PATH"

# -- Java ----------------------------------------------------------------------
# export JAVA_HOME="/Library/Java/Home"
# export JUNIT_HOME="/Library/junit"
# export PATH="$PATH:$JUNIT_HOME"
# export CLASSPATH="$CLASSPATH:$JUNIT_HOME/junit-4.12.jar:$JUNIT_HOME/hamcrest-core-1.3.jar"
# alias jtest=java\ org.junit.runner.JUnitCore

# -- Rbenv ---------------------------------------------------------------------
export RBENV_ROOT='/usr/local/var/rbenv'
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

# -- Functions -----------------------------------------------------------------

# Extract archive based on file type
# Taken from http://justinlilly.com/dotfiles/zsh.html
extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)        tar xjf $1        ;;
            *.tar.gz)         tar xzf $1        ;;
            *.bz2)            bunzip2 $1        ;;
            *.rar)            unrar x $1        ;;
            *.gz)             gunzip $1         ;;
            *.tar)            tar xf $1         ;;
            *.tbz2)           tar xjf $1        ;;
            *.tgz)            tar xzf $1        ;;
            *.zip)            unzip $1          ;;
            *.Z)              uncompress $1     ;;
            *)                echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# -- Tmux ----------------------------------------------------------------------
export DISABLE_AUTO_TITLE="true"
alias tmux="tmux -2"

# -- TheFuck -------------------------------------------------------------------
#    https://github.com/nvbn/thefuck
alias fuck='$(thefuck $(fc -ln -1))'

# -- Add DOTFILES bin to PATH --------------------------------------------------
export PATH="$PATH:$DOTFILES/bin"

# -- Xiki ----------------------------------------------------------------------
if [[ -f "$HOME/.xsh" ]]; then
  source $HOME/.xsh
fi

# -- Pyenv ---------------------------------------------------------------------
if exists "pyenv"; then
  export PYENV_ROOT=/usr/local/var/pyenv
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

# -- fzf -----------------------------------------------------------------------
if [ -f ~/.fzf.zsh ]; then
  source ~/.fzf.zsh
  export FZF_DEFAULT_COMMAND='ag -g ""' # silver searcher respects .gitignore
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# -- OS-Specific Config --------------------------------------------------------
if [[ $(uname) == 'Darwin' ]]; then
  # Load OSX config
  source $DOTFILES/zsh/zshrc.osx
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
  # Load Linux config
fi

# -- Local Configuration -------------------------------------------------------
if [[ -f "$DOTFILES/zsh/zshrc.local" ]]; then
  source $DOTFILES/zsh/zshrc.local
fi
